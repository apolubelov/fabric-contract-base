
plugins {
    id 'scala'
    id "com.jfrog.bintray" version "1.8.4"
    id "maven-publish"
}

group 'com.github.apolubelov.fabric-contract-base'
version '1.0.0-pre-alpha-5'

sourceCompatibility = 1.8
compileScala.targetCompatibility = 1.8

dependencies {
    compile 'org.scala-lang:scala-library:2.12.0'

    compile('org.hyperledger.fabric-chaincode-java:fabric-chaincode-shim:1.3.0'){
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    // java chain code uses different logger facades, namely JUL and commons logging ...
    compile 'org.slf4j:jcl-over-slf4j:1.7.25'
    compile 'org.slf4j:jul-to-slf4j:1.7.25'

    // testing libraries
    testCompile 'junit:junit:4.12'
    testCompile 'org.scalatest:scalatest_2.12:3.0.5'
    testCompile 'org.mockito:mockito-core:2.23.0'

    testRuntime 'org.scala-lang.modules:scala-xml_2.12:1.1.0'
}

repositories {
    mavenLocal()
    maven {
        url 'https://nexus.hyperledger.org/content/repositories/releases'
    }
    mavenCentral()
    jcenter()
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: [javadoc, scaladoc]) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

//def pomConfig = {
//    licenses {
//        license {
//            name "GNU LESSER GENERAL PUBLIC LICENSE, Version 3"
//            url "https://www.gnu.org/licenses/lgpl-3.0.txt"
//            distribution "repo"
//        }
//    }
//    developers {
//        developer {
//            id "apolubelov"
//            name "Alexey Polubelov"
//        }
//    }
//
//    scm {
//        url "https://github.com/apolubelov/fabric-contract-base"
//    }
//}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId group
            artifactId rootProject.name
            version version
//            pom.withXml {
//                def root = asNode()
//                root.appendNode('description', 'Scala library for Hyperledger Fabric smart contracts development')
//                root.appendNode('name', rootProject.name)
//                root.appendNode('url', 'https://github.com/apolubelov/fabric-contract-base')
//                root.children().last() + pomConfig
//            }
        }
    }
}

bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['mavenPublication']
    pkg {
        repo = 'hyperledger-fabric-extensions'
        name = 'fabric-contract-base'
        licenses = ['LGPL-3.0']
        vcsUrl = 'https://github.com/apolubelov/fabric-contract-base'
        publicDownloadNumbers = true
        version {
            name = project.version
            desc = project.version
            released  = new Date()
        }
    }
}